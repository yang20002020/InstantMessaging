1.
gin项目初始化以及gorm的引入
测试：
运行testGorm.go
打开navicat ,查看数据库ginchat
2.
gin引入以及项目目录的创建
运行主程序
浏览器测试：
http://127.0.0.1:8081/index
运行test1.go
浏览器测试：
127.0.0.1:8081/ping

3.
配置数据初始化
（1）主要是添加了app.yml文件
（2）主程序运行go run  main.go
（3）终端会显示：
config app: <nil>
config mysql: dns:root:fendou2017@tcp(127.0.0.1:3306)/ginchat?charset=utf8&parseTime=true&loc=Local

4.
配置数据初始化以及前后端交互测试
（1).运行主程序
（2). 浏览器输入 http://127.0.0.1:8081/user/getUserList
浏览器会显示对应的信息

5.
前后端分离引入swagger

 资料地址: https://pkg.go.dev/github.com/swaggo/swag
使用方法：
(1).下载地址：$ go install github.com/swaggo/swag/cmd/swag@latest
(2). swag init 创建docs文件
(3).go get -u github.com/swaggo/gin-swagger
(4).go get -u github.com/swaggo/files
(5). 运行 主程序
浏览器 127.0.0.1:8081/swagger/index.html，页面会显示swagger对应的页面logo

6.
在package service包中
（1）添加注释格式，注意写的格式不能出现错误，如下所示
// GetIndex
// @Tags         首页
// @Success      200  {string}  welcome
// @Router      /index [get]
（2） 在命令行中输入swag init
（3）浏览器 127.0.0.1:8081/swagger/index.html，进行测试
同理，应用在GetUserList函数
6.
sql日志打印
（1）在InitMySql() 函数中自定义日志模板，打印sql语句
 运行程序，终端会显示
 SELECT * FROM `user_basic` WHERE `user_basic`.`deleted_at` IS NULL

8.
实现用户模块新增、删除以及更新功能
测试
浏览器 127.0.0.1:8081/swagger/index.html，进行测试
输入 姓名、密码以及确认密码、id相关信息，数据库会对应更新user信息

9.
添加电话和邮箱校验
